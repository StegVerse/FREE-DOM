name: Auto Update (with TV)

on:
  push:
    branches: [ "main" ]
    paths:
      - "data/**"
      - "scripts/**"
      - ".github/workflows/**"
  workflow_dispatch: {}

permissions:
  contents: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install requests pandas jq

      - name: Fetch short-lived secrets from TV
        run: |
          python scripts/tv_fetch.py             --tv-url https://TV_BASE_URL             --role free-dom/ci/auto-update             --aud stegverse-tv             --keys secure_submission_url,private_store_endpoint,osint/*             --out /tmp/tv.json

      - name: Mask values in logs (defensive; do not echo secrets)
        run: |
          SECURE_URL=$(jq -r '.secure_submission_url' /tmp/tv.json)
          echo "::add-mask::$SECURE_URL"
          echo "TV values acquired. (Secrets masked.)"

      - name: Build Version Badge
        run: python scripts/make_version_badge.py || true

      - name: Build Freshness Badge
        run: python scripts/make_freshness_badge.py || true

      - name: Merge pending + validate
        run: |
          python scripts/import_pending.py || true
          python scripts/build_checklist.py || true
          python scripts/build_changelog.py || true
          python scripts/update_timeline.py || true

      - name: Commit artifacts (if changed)
        uses: EndBug/add-and-commit@v9
        with:
          add: |
            CHANGELOG.md
            data/summary/CHANGELOG_batches.csv
            data/summary/VERSION
            docs/badges/version.svg
            docs/badges/freshness.svg
            data/master/**
            data/unverified/**
            data/archive/**
            CHECKLIST.md
          message: "chore(auto-update): merge + rebuild + badges + validate"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Cleanup secret file
        if: always()
        run: rm -f /tmp/tv.json
